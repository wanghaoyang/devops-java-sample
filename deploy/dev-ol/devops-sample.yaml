kind: Deployment
apiVersion: apps/v1
metadata:
  # 项目名
  name: vue-sample-dev
  # 名称空间
  namespace: ks-vue-sample-dev
  labels:
    app: vue-sample-dev
spec:
  # 副本数
  replicas: 1
  selector:
    matchLabels:
      app: vue-sample-dev
  template:
    metadata:
      labels:
        app: vue-sample-dev
    spec:
      containers:
        # 容器名称
        - name: vue-sample-dev
          image: $REGISTRY/$DOCKERHUB_NAMESPACE/$PROJECT_NAME:latest
          ports:
            - name: tcp-8080
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 10Mi          
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    # RollingUpdate 滚动更新, 多个pod停一个启一个
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  
---
kind: Service
apiVersion: v1
metadata:
  # 项目名
  name: vue-sample-dev
  # 名称空间
  namespace: ks-vue-sample-dev
  labels:
    app: vue-sample-dev
spec:
  ports:
    - name: http
      protocol: TCP
      # 1. nodePort
      #    外部机器可访问的端口。
      #    比如一个Web应用需要被其他用户访问，那么需要配置type=NodePort，而且配置nodePort=30001，那么其他机器就可以通过浏览器访问scheme://node:30001访问到该服务，例如http://node:30001。
　    #    例如MySQL数据库可能不需要被外界访问，只需被内部服务访问，那么不必设置NodePort
      # 2. targetPort
      #    容器的端口（最根本的端口入口），与制作容器时暴露的端口一致（DockerFile中EXPOSE），例如docker.io官方的nginx暴露的是80端口。
      #    docker.io官方的nginx容器的DockerFile参考https://github.com/nginxinc/docker-nginx
      # 3. port
      #    kubernetes中的服务之间访问的端口，尽管mysql容器暴露了3306端口（参考https://github.com/docker-library/mysql/的DockerFile），但是集群内其他容器需要通过33306端口访问该服务，外部机器不能访问mysql服务，因为他没有配置NodePort类型
      # 服务端口, service封装多个pod, 暴漏端口
      port: 8080
      # 容器端口
      targetPort: 8080
      # 节点端口, 供外部访问, 不能一样
      # 默认范围: 30000 - 32767
      # nodePort: 32001
  selector:
    app: xxx
  type: NodePort
  sessionAffinity: None
